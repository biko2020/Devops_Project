# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

 # --- installation de serveur jenkins --
 
Vagrant.configure("2") do |config|
  # jenkins server
  config.vm.define "jenkins-pipeline" do |jenkins|
    jenkins.vm.box = "debian/buster64"
    jenkins.vm.hostname = "jenkins-pipeline"
    jenkins.vm.box_url = "debian/buster64"
    jenkins.vm.network :private_network, ip: "192.168.5.100"
    jenkins.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 3072]
      v.customize ["modifyvm", :id, "--name", "jenkins-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config    
      service ssh restart
    SHELL
    jenkins.vm.provision "shell", path: "install_jenkins.sh"
  end

  
  
  # --- installation des trois serveurs apliactif --
  # serveur Enset pour developpement
  config.vm.define "ensetsrvdev-pipeline" do |ensetsrvdev|
    ensetsrvdev.vm.box = "debian/buster64"
    ensetsrvdev.vm.hostname = "ensetsrvdev-pipeline"
    ensetsrvdev.vm.box_url = "debian/buster64"
    ensetsrvdev.vm.network :private_network, ip: "192.168.1.1"
    ensetsrvdev.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "ensetsrvdev-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      service ssh restart
    SHELL
  end

   # serveur Enset pour stage
  config.vm.define "ensetsrvstage-pipeline" do |ensetsrvstage|
    ensetsrvstage.vm.box = "debian/buster64"
    ensetsrvstage.vm.hostname = "ensetsrvstage-pipeline"
    ensetsrvstage.vm.box_url = "debian/buster64"
    ensetsrvstage.vm.network :private_network, ip: "192.168.1.2"
    ensetsrvstage.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "ensetsrvstage-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      service ssh restart
    SHELL
  end

  # serveur Enset pour production
  config.vm.define "ensetsrvprod-pipeline" do |ensetsrvprod|
    ensetsrvprod.vm.box = "debian/buster64"
    ensetsrvprod.vm.hostname = "ensetsrvprod-pipeline"
    ensetsrvprod.vm.box_url = "debian/buster64"
    ensetsrvprod.vm.network :private_network, ip: "192.168.1.3"
    ensetsrvprod.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "ensetsrvprod-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      service ssh restart
    SHELL
  end
  
  # créer le serveur de base de donnée Enset postges

  config.vm.define "ensetsrvbd-pipeline" do |ensetsrvbd|
    ensetsrvbd.vm.box = "debian/buster64"
    ensetsrvbd.vm.hostname = "ensetsrvbd-pipeline"
    ensetsrvbd.vm.box_url = "debian/buster64"
    ensetsrvbd.vm.network :private_network, ip: "192.168.1.4"
    ensetsrvbd.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "ensetsrvbd-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      service ssh restart
    SHELL
    ensetsrvbd.vm.provision "shell", path: "install_Ensetsrvpostgres.sh"
  end

  # le Serveur registry
  config.vm.define "registry-pipeline" do |registry|
    registry.vm.box = "debian/buster64"
    registry.vm.hostname = "registry-pipeline"
    registry.vm.box_url = "debian/buster64"
    registry.vm.network :private_network, ip: "192.168.1.5"
    registry.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "registry-pipeline"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      service ssh restart
    SHELL
    registry.vm.provision "shell", path: "install_registry.sh"
  end

end

